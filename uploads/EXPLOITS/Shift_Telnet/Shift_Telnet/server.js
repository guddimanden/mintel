const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const mysql = require('mysql2');

const app = express();
const server = http.createServer(app);
const io = socketIo(server, {
  cors: {
    origin: "http://localhost",
    methods: ["GET", "POST"]
  }
});

// Database connection
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'intelbreach_db'
});

db.connect(err => {
  if (err) throw err;
  console.log('MySQL Connected for Socket.io');
});

let onlineUsers = 0;

io.on('connection', (socket) => {
  onlineUsers++;
  io.emit('onlineUpdate', { count: onlineUsers });
  
  // Handle new posts
  socket.on('newPost', (postData) => {
    const { title, content, user_id, category } = postData;
    const query = 'INSERT INTO posts (user_id, title, content, category) VALUES (?, ?, ?, ?)';
    
    db.query(query, [user_id, title, content, category], (err, result) => {
      if (err) return socket.emit('postError', err.message);
      
      // Get the new post with username
      db.query(
        'SELECT p.*, u.username FROM posts p JOIN users u ON p.user_id = u.id WHERE p.id = ?',
        [result.insertId],
        (err, post) => {
          if (err) return socket.emit('postError', err.message);
          io.emit('newPost', post[0]);
        }
      );
    });
  });

  socket.on('disconnect', () => {
    onlineUsers--;
    io.emit('onlineUpdate', { count: onlineUsers });
  });
});

server.listen(3000, () => console.log('Socket.io server running on port 3000'));